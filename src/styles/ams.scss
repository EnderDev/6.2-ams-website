/* Defines the brand styles we created in the moodboard */
$ams-red: rgb(243, 18, 18);
$ams-orange: rgb(253, 110, 8);
$ams-yellow: rgb(255, 199, 0);
$ams-green: rgb(14, 163, 0);
$ams-blue: rgb(29, 86, 236);
$ams-purple: rgb(139, 16, 236);
$ams-pink: rgb(255, 9, 216);

$ams-gray1: rgb(230, 230, 230);
$ams-gray2: rgb(193, 193, 193);
$ams-gray3: rgb(134, 134, 134);
$ams-gray4: rgb(99, 99, 99);
$ams-gray5: rgb(43, 43, 43);
$ams-gray6: rgb(18, 18, 18);

$ams-white: rgb(255, 255, 255);

/* @use is a way of importing/including other .scss files into this one */
/* It means we can contain styles into other files, reducing the complexity of a single main file */

/* Primitive styles */
@use "reset";
@use "fonts";
@use "typography";
@use "a11y";
@use "flex";

/* Component styles */
@use "components/header";
@use "components/button";
@use "components/hero";
@use "components/form";
@use "components/footer";
@use "components/clients";
@use "components/help";
@use "components/post";
@use "components/banner";
@use "components/solutions-list";
@use "components/lists";

/* Page styles */
@use "pages/home";
@use "pages/sitemap";
@use "pages/solutions";
@use "pages/blog";
@use "pages/about";
@use "pages/resources";
@use "pages/contact";

/* Built-in modules */
@use "sass:color";

/* This mixin will generate hover, active and lighter variants of all our colours */
/* Removes the need for someone to manually tweak the colours to get these variants */
@mixin generate_colourways($name, $property) {
	--ams-#{$name}: #{$property};
	--ams-#{$name}-hover: #{if(
			color.lightness($property) > 30%,
			color.adjust($property, $lightness: -8%),
			color.adjust($property, $lightness: 8%)
		)};
	--ams-#{$name}-active: #{if(
			color.lightness($property) > 30%,
			color.adjust($property, $lightness: -16%),
			color.adjust($property, $lightness: 16%)
		)};
	--ams-#{$name}-lighter: #{color.adjust($property, $lightness: 20%)};
}

/* Theme */
/* The :root element here refers to the main <html> tag in our document. */
:root {
	/* We're using CSS variables to ensure that our colours can be used throughout the CSS */
	/* You define a CSS variable using --<name>: <value> */
	/* Then this CSS variable can be used throughout the CSS using var(--<name>); */
	--ams-background: var(--ams-white);
	--ams-text: var(--ams-gray6);
	--ams-text-hover: var(--ams-gray6-hover);
	--ams-text-active: var(--ams-gray6-active);

	@include generate_colourways(red, $ams-red);
	@include generate_colourways(orange, $ams-orange);
	@include generate_colourways(yellow, $ams-yellow);
	@include generate_colourways(green, $ams-green);
	@include generate_colourways(blue, $ams-blue);
	@include generate_colourways(purple, $ams-purple);
	@include generate_colourways(pink, $ams-pink);

	@include generate_colourways(gray1, $ams-gray1);
	@include generate_colourways(gray2, $ams-gray2);
	@include generate_colourways(gray3, $ams-gray3);
	@include generate_colourways(gray4, $ams-gray4);
	@include generate_colourways(gray5, $ams-gray5);
	@include generate_colourways(gray6, $ams-gray6);

	@include generate_colourways(white, $ams-white);

	--ams-font: "Red Hat Display", system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
		Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;

	--ams-guttered-width: 1300px;
}

/* Remove any user agent styling that the browser has set by default + apply our custom font */
html,
body {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
	font-family: var(--ams-font);
}

/* Change the background and colour of the text to our colours */
body {
	background-color: var(--ams-background);
	color: var(--ams-text);
}

/* Add a custom selection colour for when the user selects text on the page */
::selection {
	background-color: var(--ams-red);
	color: var(--ams-white);
}

/* This targets people who use a keyboard for 
/* navigation, we're adding a better "focus ring" around 
/* everything to make it easier to see */
:focus-visible {
	outline: 2px solid var(--ams-red);
	outline-offset: 4px;
	box-shadow: 0px 0px 0px 4px var(--ams-white);
}

/* Add a red colour and bold the text for all a tags */
a {
	color: var(--ams-red);
	font-weight: 500;
}

/* Add a default height for the app mount point and make it flexbox */
#__next {
	min-height: 100vh;
	display: flex;
	flex-direction: column;
}

/* Make the main element flexbox */
main#main-content {
	display: flex;
	flex-direction: column;
	flex: 1;
}

/* Add a scroll margin to all elements */
/* Scroll margin dictates how far the bounds 
/* should be between anchor tags when you go to a anchor on the page */
* {
	scroll-margin-top: 4rem;
}

.__html_comment {
	height: 0px;
	position: absolute;
}
